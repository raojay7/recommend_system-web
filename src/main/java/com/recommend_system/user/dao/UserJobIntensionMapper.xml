<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recommend_system.user.dao.UserJobIntensionMapper" >
  <resultMap id="BaseResultMap" type="com.recommend_system.user.entity.UserJobIntension" >
    <id column="intension_id" property="intensionId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="job_nature" property="jobNature" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="salary_min" property="salaryMin" jdbcType="INTEGER" />
    <result column="salary_max" property="salaryMax" jdbcType="INTEGER" />
    <result column="workplace" property="workplace" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    intension_id, user_id, job_nature, job_name, salary_min, salary_max, workplace
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recommend_system.user.entity.UserJobIntensionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user_job_intension
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_job_intension
    where intension_id = #{intensionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_job_intension
    where intension_id = #{intensionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.recommend_system.user.entity.UserJobIntensionExample" >
    delete from t_user_job_intension
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.recommend_system.user.entity.UserJobIntension" >
    insert into t_user_job_intension (intension_id, user_id, job_nature, 
      job_name, salary_min, salary_max, 
      workplace)
    values (#{intensionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{jobNature,jdbcType=INTEGER}, 
      #{jobName,jdbcType=VARCHAR}, #{salaryMin,jdbcType=INTEGER}, #{salaryMax,jdbcType=INTEGER}, 
      #{workplace,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.recommend_system.user.entity.UserJobIntension" >
    insert into t_user_job_intension
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="intensionId != null" >
        intension_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="jobNature != null" >
        job_nature,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="salaryMin != null" >
        salary_min,
      </if>
      <if test="salaryMax != null" >
        salary_max,
      </if>
      <if test="workplace != null" >
        workplace,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="intensionId != null" >
        #{intensionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobNature != null" >
        #{jobNature,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="salaryMin != null" >
        #{salaryMin,jdbcType=INTEGER},
      </if>
      <if test="salaryMax != null" >
        #{salaryMax,jdbcType=INTEGER},
      </if>
      <if test="workplace != null" >
        #{workplace,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.recommend_system.user.entity.UserJobIntensionExample" resultType="java.lang.Integer" >
    select count(*) from t_user_job_intension
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user_job_intension
    <set >
      <if test="record.intensionId != null" >
        intension_id = #{record.intensionId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.jobNature != null" >
        job_nature = #{record.jobNature,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryMin != null" >
        salary_min = #{record.salaryMin,jdbcType=INTEGER},
      </if>
      <if test="record.salaryMax != null" >
        salary_max = #{record.salaryMax,jdbcType=INTEGER},
      </if>
      <if test="record.workplace != null" >
        workplace = #{record.workplace,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user_job_intension
    set intension_id = #{record.intensionId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      job_nature = #{record.jobNature,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      salary_min = #{record.salaryMin,jdbcType=INTEGER},
      salary_max = #{record.salaryMax,jdbcType=INTEGER},
      workplace = #{record.workplace,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.recommend_system.user.entity.UserJobIntension" >
    update t_user_job_intension
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobNature != null" >
        job_nature = #{jobNature,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="salaryMin != null" >
        salary_min = #{salaryMin,jdbcType=INTEGER},
      </if>
      <if test="salaryMax != null" >
        salary_max = #{salaryMax,jdbcType=INTEGER},
      </if>
      <if test="workplace != null" >
        workplace = #{workplace,jdbcType=VARCHAR},
      </if>
    </set>
    where intension_id = #{intensionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recommend_system.user.entity.UserJobIntension" >
    update t_user_job_intension
    set user_id = #{userId,jdbcType=INTEGER},
      job_nature = #{jobNature,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      salary_min = #{salaryMin,jdbcType=INTEGER},
      salary_max = #{salaryMax,jdbcType=INTEGER},
      workplace = #{workplace,jdbcType=VARCHAR}
    where intension_id = #{intensionId,jdbcType=INTEGER}
  </update>
</mapper>